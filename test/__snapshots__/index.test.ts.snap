// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should > should not transform complex type 1`] = `
{
  "code": "
import { defineComponent } from \\"vue\\";

type Props = 1 extends 1 ? {
  foo: number
} : { a: string }

const Foo = defineComponent((props: Props) => () => <div>{props}></div>);
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`should > should not transform default export 1`] = `
{
  "code": "
import { defineComponent } from \\"vue\\";

interface Props<T> {
  a: number;
  b: {
    some: boolean
  }
}
export default defineComponent(
  <T>(props: Props<T>) => {
    return () => <div>{props}</div>;
  },
);
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`should > should not transform setup option when props is set 1`] = `
{
  "code": "
import { defineComponent } from \\"vue\\";

const Foo = defineComponent({
  props: {
    foo: Number
  },
  setup: (props: { foo: number }) => () => <div>{props}></div>
});
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`should > should not transform without type annotation 1`] = `
{
  "code": "
import { defineComponent } from \\"vue\\";

const Foo = defineComponent((props) => () => <div>{props}></div>);
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`should > should transform function declaration 1`] = `
{
  "code": "
import { defineComponent } from \\"vue\\";

type Props = {
  foo: number
}

const Foo = defineComponent(function (props: Props) { return () => <div>{props}></div> });
Object.defineProperty(Foo, \\"props\\", {
  value: [\\"foo\\"],
});
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAA0F;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`should > should transform inline argument type 1`] = `
{
  "code": "
import { defineComponent } from \\"vue\\";

const Foo = defineComponent((props: { foo: number }) => () => <div>{props}></div>);
Object.defineProperty(Foo, \\"props\\", {
  value: [\\"foo\\"],
});
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;;;GAAmF;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`should > should transform inline type 1`] = `
{
  "code": "
import { defineComponent } from \\"vue\\";

const Foo = defineComponent<{ foo: number }>((props) => () => <div>{props}></div>);
Object.defineProperty(Foo, \\"props\\", {
  value: [\\"foo\\"],
});
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;;;GAAmF;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`should > should transform setup option 1`] = `
{
  "code": "
import { defineComponent } from \\"vue\\";

const Foo = defineComponent({
  setup: (props: { foo: number }) => () => <div>{props}></div>
});
Object.defineProperty(Foo, \\"props\\", {
  value: [\\"foo\\"],
});
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;;;GAAG;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`should > should transform type argument 1`] = `
{
  "code": "
import { defineComponent } from \\"vue\\";

type Props = {
  foo: number
}

const Foo = defineComponent<Props>((props) => () => <div>{props}></div>);
Object.defineProperty(Foo, \\"props\\", {
  value: [\\"foo\\"],
});
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAAyE;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;

exports[`should > transform 1`] = `
{
  "code": "
import { defineComponent } from \\"vue\\";

interface Props<T> {
  a: number;
  b: {
    some: boolean
  }
}

type P1 = {
  a: 1
}

const Foo = defineComponent(
  <T>(props: Props<T>) => {
    return () => <div>{props}</div>;
  },
);
Object.defineProperty(Foo, \\"props\\", {
  value: [\\"a\\",\\"b\\"],
});

const Bar = defineComponent(
  <T>(props: P1<T>) => {
    return () => <div>{props}</div>;
  },
);
Object.defineProperty(Bar, \\"props\\", {
  value: [\\"a\\"],
});
",
  "map": SourceMap {
    "file": undefined,
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;;GAAE;",
    "names": [],
    "sources": [
      "",
    ],
    "sourcesContent": undefined,
    "version": 3,
  },
}
`;
